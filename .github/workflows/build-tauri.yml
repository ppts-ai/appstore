name: Build Tauri App

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Tauri Bundle
    permissions:
        contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # This includes a custom scenario on Windows with Node.js 18.x
          - platform: windows-latest
            arch: "x86_64"
          - platform: macos-13
            arch: "x86_64"
          - platform: macos-latest
            arch: "aarch64"            
    runs-on: ${{ matrix.platform }}


    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: install Rust stable
      uses: dtolnay/rust-toolchain@stable

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
          workspaces: './src-tauri -> target'

    # Get the Rust target triple
    - name: Get Rust target triple
      id: rust-target
      run: echo "TARGET=$(rustc -vV | grep 'host:' | awk '{print $2}')" >> $GITHUB_ENV


    # Install Podman on macOS
    - name: Install Podman on macOS
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install podman
        brew --prefix podman  # Get the installation prefix
        PREFIX=$(brew --prefix podman)
        mkdir -p ./src-tauri/bin
        cp "${PREFIX}/bin/podman" ./src-tauri/bin/podman-${{ env.TARGET }}
        cp "${PREFIX}/bin/podman-mac-helper" ./src-tauri/bin/podman-mac-helper-${{ env.TARGET }}
        cp "${PREFIX}/libexec/podman/gvproxy" ./src-tauri/bin/gvproxy-${{ env.TARGET }}
        cp "${PREFIX}/libexec/podman/vfkit" ./src-tauri/bin/vfkit-${{ env.TARGET }}
        touch ./src-tauri/bin/win-sshproxy-${{ env.TARGET }}
        curl -L https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-darwin-${{matrix.arch}} --output ./src-tauri/bin/docker-compose-aarch64-apple-darwin

    - name: Install podman-cli on Windows
      if: runner.os == 'Windows'
      uses: crazy-max/ghaction-chocolatey@v3
      with:
        args: install podman-cli -y
    # Install Podman on Windows
    - name: copy podman to soruce folder
      if: runner.os == 'Windows'
      run: |
        podman --version
        # Verify Podman installation
        $podmanPath = Get-Command "podman" | Select-Object -ExpandProperty Path
        Write-Host "Podman is installed at: $podmanPath"
        # Find Podman location
        dir C:\ProgramData\chocolatey\lib\podman-cli\tools
        mkdir -p ./src-tauri/bin
        Copy-Item -Path "C:\ProgramData\chocolatey\lib\podman-cli\tools\podman-5.2.4\usr\bin\podman.exe" -Destination "./src-tauri/bin/podman-x86_64-pc-windows-msvc.exe"
        touch "./src-tauri/bin/podman-mac-helper-x86_64-pc-windows-msvc.exe"
        Copy-Item -Path "C:\ProgramData\chocolatey\lib\podman-cli\tools\podman-5.2.4\usr\bin\gvproxy.exe" -Destination "./src-tauri/bin/gvproxy-x86_64-pc-windows-msvc.exe"
        Copy-Item -Path "C:\ProgramData\chocolatey\lib\podman-cli\tools\podman-5.2.4\usr\bin\win-sshproxy.exe" -Destination "./src-tauri/bin/win-sshproxy-x86_64-pc-windows-msvc.exe"
        touch "./src-tauri/bin/vfkit-x86_64-pc-windows-msvc.exe"
        curl -L https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-windows-x86_64.exe --output ./src-tauri/bin/docker-compose-x86_64-pc-windows-msvc.exe

      
    - name: setup node
      uses: actions/setup-node@v4
      with:
          node-version: 20

    - name: Install Tauri CLI
      run: npm install -g @tauri-apps/cli
  
    - name: Install project dependencies
      run: npm install

    - name: Build Tauri project
      run: npm run tauri build

    - name: Upload Tauri artifacts
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: appstore-${{ matrix.platform }}
        path: ./src-tauri/target/release/bundle/msi
    - name: Upload Tauri artifacts
      if: matrix.platform != 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: appstore-${{ matrix.platform }}
        path: ./src-tauri/target/**/release/bundle/dmg
